{"Assignment":"Assignment 2","output":"\/------------------------------------------------------------------------------\\\n|                              Summary of Results                              |\n\\------------------------------------------------------------------------------\/\nTestDesign: 1\/4\n    + 1. test no prints on import\n    - 2. test all specified classes defined\n    - 3. test all specified classes are defined correctly\n    - 4. test all classes and functions have documentation strings\nTestCard: 2\/2\n    + 1. test Card.__str__\n    + 2. test Card.__repr__\nTestNumberCard: 3\/3\n    + 1. test NumberCard.get_number\n    + 2. test NumberCard.__str__\n    + 3. test NumberCard.__repr__\nTestCoderCard: 3\/3\n    + 1. test CoderCard.get_name\n    + 2. test CoderCard.__str__\n    + 3. test CoderCard.__repr__\nTestTutorCard: 3\/3\n    + 1. test TutorCard.get_name\n    + 2. test TutorCard.__str__\n    + 3. test TutorCard.__repr__\nTestKeyboardKidnapperCard: 2\/2\n    + 1. test KeyboardKidnapperCard.__str__\n    + 2. test KeyboardKidnapperCard.__repr__\nTestAllNighterCard: 2\/2\n    + 1. test AllNighterCard.__str__\n    + 2. test AllNighterCard.__repr__\nTestDeck: 1\/14\n    + 1. test Deck.__init__\n    - 2. test Deck.get_cards\n    - 3. test Deck.get_card\n    - 4. test Deck.top\n    ? 5. test Deck.remove_card\n    - 6. test Deck.get_amount\n    - 7. test Deck.shuffle\n    ? 8. test Deck.pick\n    ? 9. test Deck.add_card\n    ? 10. test Deck.add_cards\n    ? 11. test Deck.copy\n    - 12. test Deck.__str__\n    - 13. test Deck.__repr__\n    - 14. test Deck with other cards\nTestPlayer: 1\/8\n    + 1. test Player.get_name\n    - 2. test Player.get_hand\n    - 3. test Player.get_coders\n    ? 4. test Player.has_won\n    - 5. test Player.__str__\n    - 6. test Player.__repr__\n    ? 7. test Player with cards in deck\n    ? 8. test Player.__repr__ with cards in deck\nTestPlayAndAction: 0\/12\n    - 1. test Card.play\n    - 2. test Card.action\n    - 3. test NumberCard.play\n    - 4. test NumberCard.action\n    - 5. test CoderCard.play\n    - 6. test CoderCard.action\n    - 7. test TutorCard.play\n    - 8. test TutorCard.action\n    - 9. test KeyboardKidnapperCard.play\n    - 10. test KeyboardKidnapperCard.action\n    - 11. test AllNighterCard.play\n    - 12. test AllNighterCard.action\nTestNoPrint: 1\/1\n    + check for no unexpected prints\n--------------------------------------------------------------------------------\n\/------------------------------------------------------------------------------\\\n|                             Failed\/Skipped Tests                             |\n\\------------------------------------------------------------------------------\/\n================================================================================\nFAIL: TestDesign 2. test all specified classes defined\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 181, in test_classes_defined\n        self.aggregate_tests()\n    AssertionError: \n        3 != 4 : 'action' does not have the correct number of parameters, expected 4 found 3 :: Card.action\n        3 != 4 : 'action' does not have the correct number of parameters, expected 4 found 3 :: NumberCard.action\n        3 != 4 : 'action' does not have the correct number of parameters, expected 4 found 3 :: CoderCard.action\n        3 != 4 : 'action' does not have the correct number of parameters, expected 4 found 3 :: TutorCard.action\n        3 != 4 : 'action' does not have the correct number of parameters, expected 4 found 3 :: KeyboardKidnapperCard.action\n        3 != 4 : 'action' does not have the correct number of parameters, expected 4 found 3 :: AllNighterCard.action\n        'amount' != 'thing'\n        - amount\n        + thing\n         : parameter name should be `amount` in Deck.pick :: Deck.pick.amount\n\n================================================================================\nFAIL: TestDesign 3. test all specified classes are defined correctly\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 239, in test_classes_defined_correctly\n        self.aggregate_tests()\n    AssertionError: \n        3 != 4 : 'action' does not have the correct number of parameters, expected 4 found 3 :: Card.action\n        Player.__str__ needs to be implemented :: Deck.__str__\n        Player.__repr__ needs to be implemented :: Deck.__repr__\n\n================================================================================\nFAIL: TestDesign 4. test all classes and functions have documentation strings\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 255, in test_doc_strings\n        self.aggregate_tests()\n    AssertionError: \n        Documentation string is required for 'AllNighterCard'\n        Documentation string is required for 'Card.__init__'\n        Documentation string is required for 'Card.action'\n        Documentation string is required for 'Card.play'\n        Documentation string is required for 'Card.__init__'\n        Documentation string is required for 'Card.action'\n        Documentation string is required for 'Card.play'\n        Documentation string is required for 'CoderCard'\n        Documentation string is required for 'CoderCard.__init__'\n        Documentation string is required for 'Card.action'\n        Documentation string is required for 'CoderCard.get_name'\n        Documentation string is required for 'Card.play'\n        Documentation string is required for 'Deck'\n        Documentation string is required for 'Deck.add_card'\n        Documentation string is required for 'Deck.add_cards'\n        Documentation string is required for 'Deck.copy'\n        Documentation string is required for 'Deck.get_amount'\n        Documentation string is required for 'Deck.pick'\n        Documentation string is required for 'Deck.remove_card'\n        Documentation string is required for 'Deck.shuffle'\n        Documentation string is required for 'KeyboardKidnapperCard'\n        Documentation string is required for 'Card.__init__'\n        Documentation string is required for 'Card.action'\n        Documentation string is required for 'Card.play'\n        Documentation string is required for 'NumberCard'\n        Documentation string is required for 'NumberCard.__init__'\n        Documentation string is required for 'Card.action'\n        Documentation string is required for 'NumberCard.get_number'\n        Documentation string is required for 'Card.play'\n        Documentation string is required for 'Player'\n        Documentation string is required for 'Player.__init__'\n        Documentation string is required for 'Player.get_coders'\n        Documentation string is required for 'Player.get_hand'\n        Documentation string is required for 'Player.get_name'\n        Documentation string is required for 'TutorCard'\n        Documentation string is required for 'TutorCard.__init__'\n        Documentation string is required for 'Card.action'\n        Documentation string is required for 'TutorCard.get_name'\n        Documentation string is required for 'Card.play'\n\n================================================================================\nERROR: TestDeck 2. test Deck.get_cards\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 408, in test_get_cards\n        cards = deck.get_cards()\n      File \"a2.py\", line 132, in get_cards\n        return build_deck(self._cards)\n    NameError: name 'build_deck' is not defined\n\n================================================================================\nERROR: TestDeck 3. test Deck.get_card\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 420, in test_get_card\n        self.assertIs(card, deck.get_card(0))\n      File \"a2.py\", line 136, in get_card\n        return self._cards[slot]\n    AttributeError: 'Deck' object has no attribute '_cards'\n\n================================================================================\nERROR: TestDeck 4. test Deck.top\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 430, in test_top\n        self.assertIs(deck.top(), self._cards[4])\n      File \"a2.py\", line 140, in top\n        return pick_card(self._cards)\n    NameError: name 'pick_card' is not defined\n\n================================================================================\nSKIP: TestDeck 5. test Deck.remove_card\n--------------------------------------------------------------------------------\n    Skipped due to failing\/skipping TestDeck.test_get_cards\n\n================================================================================\nERROR: TestDeck 6. test Deck.get_amount\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 462, in test_get_amount\n        self.assertEqual(deck.get_amount(), 0)\n      File \"a2.py\", line 146, in get_amount\n        return self.cards\n    AttributeError: 'Deck' object has no attribute 'cards'\n\n================================================================================\nERROR: TestDeck 7. test Deck.shuffle\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 472, in test_shuffle\n        self.assertIsNone(deck.shuffle(), msg=\"Deck.shuffle should not return\")\n      File \"a2.py\", line 149, in shuffle\n        random.shuffle(self.cards)\n    AttributeError: 'Deck' object has no attribute 'cards'\n\n================================================================================\nSKIP: TestDeck 8. test Deck.pick\n--------------------------------------------------------------------------------\n    Skipped due to failing\/skipping TestDeck.test_get_cards\n\n================================================================================\nSKIP: TestDeck 9. test Deck.add_card\n--------------------------------------------------------------------------------\n    AS ABOVE\n\n================================================================================\nSKIP: TestDeck 10. test Deck.add_cards\n--------------------------------------------------------------------------------\n    AS ABOVE\n\n================================================================================\nSKIP: TestDeck 11. test Deck.copy\n--------------------------------------------------------------------------------\n    AS ABOVE\n\n================================================================================\nFAIL: TestDeck 12. test Deck.__str__\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 547, in test_str\n        self.assertEqual(str(deck), \"Deck()\")\n    AssertionError: 'Deck({Cards})' != 'Deck()'\n    - Deck({Cards})\n    + Deck()\n\n================================================================================\nFAIL: TestDeck 13. test Deck.__repr__\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 558, in test_repr\n        self.assertEqual(repr(deck), \"Deck()\")\n    AssertionError: 'Deck({Cards})' != 'Deck()'\n    - Deck({Cards})\n    + Deck()\n\n================================================================================\nFAIL: TestDeck 14. test Deck with other cards\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 577, in test_str_with_other_cards\n        self.assertEqual(str(deck), 'Deck(Card(), NumberCard(1), CoderCard(steven), '\n    AssertionError: 'Deck({Cards})' != 'Deck(Card(), NumberCard(1), CoderCard(steven),[58 chars]d())'\n    - Deck({Cards})\n    + Deck(Card(), NumberCard(1), CoderCard(steven), TutorCard(steven), KeyboardKidnapperCard(), AllNighterCard())\n\n================================================================================\nFAIL: TestPlayer 2. test Player.get_hand\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 598, in test_get_hand\n        self.assertIsInstance(hand, self.a2.Deck)\n    AssertionError: None is not an instance of <class 'a2.Deck'>\n\n================================================================================\nFAIL: TestPlayer 3. test Player.get_coders\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 611, in test_get_coders\n        self.assertIsInstance(coders, self.a2.Deck)\n    AssertionError: None is not an instance of <class 'a2.Deck'>\n\n================================================================================\nSKIP: TestPlayer 4. test Player.has_won\n--------------------------------------------------------------------------------\n    Skipped due to failing\/skipping TestPlayer.test_get_coders\n\n================================================================================\nFAIL: TestPlayer 5. test Player.__str__\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 635, in test_str\n        self.assertEqual(str(p), 'Player(steven, Deck(), Deck())')\n    AssertionError: '<a2.Player object at 0x102e9d1d0>' != 'Player(steven, Deck(), Deck())'\n    - <a2.Player object at 0x102e9d1d0>\n    + Player(steven, Deck(), Deck())\n\n================================================================================\nFAIL: TestPlayer 6. test Player.__repr__\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 640, in test_repr\n        self.assertEqual(repr(p), 'Player(steven, Deck(), Deck())')\n    AssertionError: '<a2.Player object at 0x102e9d240>' != 'Player(steven, Deck(), Deck())'\n    - <a2.Player object at 0x102e9d240>\n    + Player(steven, Deck(), Deck())\n\n================================================================================\nSKIP: TestPlayer 7. test Player with cards in deck\n--------------------------------------------------------------------------------\n    Skipped due to failing\/skipping TestPlayer.test_get_coders\n\n================================================================================\nSKIP: TestPlayer 8. test Player.__repr__ with cards in deck\n--------------------------------------------------------------------------------\n    AS ABOVE\n\n================================================================================\nERROR: TestPlayAndAction 1. test Card.play\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 776, in test_card_play\n        self.init_game(self.a2.Card, cycle=False)\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 2. test Card.action\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 784, in test_card_action\n        self.init_game(self.a2.Card, cycle=False)\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 3. test NumberCard.play\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 797, in test_number_play\n        self.init_game(self.a2.NumberCard, *range(10))\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 4. test NumberCard.action\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 831, in test_number_action\n        self.init_game(self.a2.Card, cycle=False)\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 5. test CoderCard.play\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 844, in test_coder_play\n        self.init_game(self.a2.CoderCard, *(f'Coder {i}' for i in range(10)))\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 6. test CoderCard.action\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 859, in test_coder_action\n        self.init_game(self.a2.Card, cycle=False)\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 7. test TutorCard.play\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 872, in test_tutor_play\n        self.init_game(self.a2.TutorCard, *(f'Tutor {i}' for i in range(10)))\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 8. test TutorCard.action\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 880, in test_tutor_action\n        self.init_game(self.a2.Card, cycle=False)\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 9. test KeyboardKidnapperCard.play\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 911, in test_keyboard_play\n        self.init_game(self.a2.KeyboardKidnapperCard, cycle=False)\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 10. test KeyboardKidnapperCard.action\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 922, in test_keyboard_action\n        coder, state, new_state = self._test_action_card_common(card, slot)\n      File \"test_a2.py\", line 745, in _test_action_card_common\n        self.init_game(self.a2.Card, cycle=False)\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 11. test AllNighterCard.play\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 934, in test_all_nighter_play\n        self.init_game(self.a2.AllNighterCard, cycle=False)\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n================================================================================\nERROR: TestPlayAndAction 12. test AllNighterCard.action\n--------------------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"test_a2.py\", line 945, in test_all_nighter_action\n        coder, state, new_state = self._test_action_card_common(card, slot)\n      File \"test_a2.py\", line 745, in _test_action_card_common\n        self.init_game(self.a2.Card, cycle=False)\n      File \"test_a2.py\", line 686, in init_game\n        player.get_hand().add_cards(pickup_pile.pick(5))\n    AttributeError: 'NoneType' object has no attribute 'add_cards'\n\n--------------------------------------------------------------------------------\nRan 54 tests in 0.587 seconds with 19 passed\/8 skipped\/27 failed.\n","Current Grade":"Needs Grading","Submission Field":"There is no student submission text data for this assignment.","test":{"total":54,"failed":27,"passed":19,"time":0.5867267230059952,"results":{"TestDesign":{"test_clean_import":"+","test_classes_defined":"-","test_classes_defined_correctly":"-","test_doc_strings":"-"},"TestCoderCard":{"test_repr":"+","test_get_number":"+","test_str":"+"},"TestDeck":{"test_str_with_other_cards":"-","test_get_card":"-","test_get_cards":"-","test_top":"-","test_shuffle":"-","test_copy":"?","test_deck_init":"+","test_repr":"-","test_pick":"?","test_add_cards":"?","test_get_amount":"-","test_str":"-","test_remove_card":"?","test_add_card":"?"},"TestNumberCard":{"test_repr":"+","test_get_number":"+","test_str":"+"},"TestCard":{"test_repr":"+","test_str":"+"},"TestPlayer":{"test_get_coders":"-","test_str_cards":"?","test_repr":"-","test_repr_cards":"?","test_has_won":"?","test_get_name":"+","test_str":"-","test_get_hand":"-"},"TestAllNighterCard":{"test_repr":"+","test_str":"+"},"TestPlayAndAction":{"test_number_action":"-","test_coder_play":"-","test_keyboard_action":"-","test_card_action":"-","test_number_play":"-","test_card_play":"-","test_all_nighter_play":"-","test_keyboard_play":"-","test_all_nighter_action":"-","test_coder_action":"-","test_tutor_play":"-","test_tutor_action":"-"},"TestKeyboardKidnapperCard":{"test_repr":"+","test_str":"+"},"TestTutorCard":{"test_repr":"+","test_get_number":"+","test_str":"+"},"TestNoPrint":{"runTest":"+"}},"errors":[],"skipped":8},"Comments":"Assignment 2 subimission (incomplete)","root":".","Date Submitted":"Friday, 20 September 2019 8:18:36 PM AEST","files":{"a2.py":"Assignment 2_s1234569_attempt_2019-09-20-20-18-36_a2.py"},"Name":"Alice Audrey (s1234569)","sid":"s1234569","timestamp":1576221307}